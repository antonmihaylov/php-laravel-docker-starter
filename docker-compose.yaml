version: "3.8"

networks:
  default:
    driver: bridge
    name: ${APP_NAME}

services:
  app:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${APP_NAME}-app
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    ports:
      - "9000:9000"

  db:
    image: postgres:12-alpine
    restart: unless-stopped
    container_name: ${APP_NAME}-db
    tty: true
    ports:
      - "5432:5432"
    volumes:
      - ./psql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: laravel_docker
      POSTGRES_PASSWORD:

  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    container_name: ${APP_NAME}-nginx
    ports:
      - "8080:80"
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    depends_on:
      - app
      - db

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    container_name: ${APP_NAME}-composer
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    depends_on:
      - app
    user: laravel
    entrypoint: ["composer"]

  npm:
    image: node:12-alpine
    container_name: ${APP_NAME}-npm
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    working_dir: /var/www/html
    entrypoint: ["npm"]
    ports:
      - "3000:3000"
      - "3001:3001"

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    container_name: ${APP_NAME}-artisan
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    depends_on:
      - db
    user: laravel
    entrypoint: ["php", "/var/www/html/artisan"]

  laravel:
    build:
      context: .
      dockerfile: laravel.dockerfile
    container_name: ${APP_NAME}-laravel
    volumes:
      - ${PATH_TO_APP}:/var/www/html
    user: laravel
    entrypoint: ["/tmp/vendor/laravel/installer/bin/laravel"]
